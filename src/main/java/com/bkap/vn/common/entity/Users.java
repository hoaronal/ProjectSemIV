package com.bkap.vn.common.entity;
// Generated Dec 6, 2017 9:49:55 PM by Hibernate Tools 4.3.1


import com.bkap.vn.common.validator.EmailWithTld;
import org.hibernate.validator.constraints.Email;
import org.springframework.format.annotation.DateTimeFormat;

import java.io.Serializable;
import java.util.Date;
import javax.persistence.*;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Pattern;
import javax.validation.constraints.Size;

/**
 * Users generated by hbm2java
 */
@Entity
@Table(name = "users"
        , schema = "dbo"
        , catalog = "shop_online"
)
public class Users implements java.io.Serializable {


    private int id;
    @NotNull(message = "Tên người dùng không được để trống!")
    @Size(min = 5, max = 20, message = "Tên người dùng tối thiểu 5 kí tự, tối đa 20 kí tự!")
    private String username;
    @Size(min = 8, max = 20, message = "Mật khẩu tối thiểu 8 kí tự, tối đa 20 kí tự!")
    private String password;
    @Pattern(regexp = "^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$", message =  "Email không đúng định dạng!")
    private String email;
    @Size(max = 20, message = "Số điện thoại tối đa 20 kí tự!")
    private String phone;
    private Date birthday;
    @Size(max = 500, message = "Address tối đa 500 kí tự!")
    private String address;
    private Date createDate;
    private Date updateDate;
    private Admin adminByAdminCreate;
    private Admin adminByAdminUpdate;
    private byte activeStatus;
    private byte status;

    public Users() {
    }


    public Users(int id, String username, String password, String email, byte activeStatus, byte status) {
        this.id = id;
        this.username = username;
        this.password = password;
        this.email = email;
        this.activeStatus = activeStatus;
        this.status = status;
    }

    public Users(int id, Admin adminByAdminCreate, Admin adminByAdminUpdate, String username, String password, String email, String phone, Date birthday, String address, Date createDate, Date updateDate, byte activeStatus, byte status) {
        this.id = id;
        this.adminByAdminCreate = adminByAdminCreate;
        this.adminByAdminUpdate = adminByAdminUpdate;
        this.username = username;
        this.password = password;
        this.email = email;
        this.phone = phone;
        this.birthday = birthday;
        this.address = address;
        this.createDate = createDate;
        this.updateDate = updateDate;
        this.activeStatus = activeStatus;
        this.status = status;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "admin_create")
    public Admin getAdminByAdminCreate() {
        return this.adminByAdminCreate;
    }

    public void setAdminByAdminCreate(Admin adminByAdminCreate) {
        this.adminByAdminCreate = adminByAdminCreate;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "admin_update")
    public Admin getAdminByAdminUpdate() {
        return this.adminByAdminUpdate;
    }

    public void setAdminByAdminUpdate(Admin adminByAdminUpdate) {
        this.adminByAdminUpdate = adminByAdminUpdate;
    }


    @Column(name = "username", nullable = false)
    public String getUsername() {
        return this.username;
    }

    public void setUsername(String username) {
        this.username = username;
    }


    @Column(name = "password", nullable = false)
    public String getPassword() {
        return this.password;
    }

    public void setPassword(String password) {
        this.password = password;
    }


    @Column(name = "email", nullable = false)
    public String getEmail() {
        return this.email;
    }

    public void setEmail(String email) {
        this.email = email;
    }


    @Column(name = "phone")
    public String getPhone() {
        return this.phone;
    }

    public void setPhone(String phone) {
        this.phone = phone;
    }

    @Temporal(TemporalType.DATE)
    @DateTimeFormat(pattern = "dd/MM/yyyy")
    @Column(name = "birthday", length = 23)
    public Date getBirthday() {
        return this.birthday;
    }

    public void setBirthday(Date birthday) {
        this.birthday = birthday;
    }


    @Column(name = "address")
    public String getAddress() {
        return this.address;
    }

    public void setAddress(String address) {
        this.address = address;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "create_date", length = 23)
    public Date getCreateDate() {
        return this.createDate;
    }

    public void setCreateDate(Date createDate) {
        this.createDate = createDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "update_date", length = 23)
    public Date getUpdateDate() {
        return this.updateDate;
    }

    public void setUpdateDate(Date updateDate) {
        this.updateDate = updateDate;
    }


    @Column(name = "active_status", nullable = false)
    public byte getActiveStatus() {
        return this.activeStatus;
    }

    public void setActiveStatus(byte activeStatus) {
        this.activeStatus = activeStatus;
    }


    @Column(name = "status", nullable = false)
    public byte getStatus() {
        return this.status;
    }

    public void setStatus(byte status) {
        this.status = status;
    }


    @Override
    public String toString() {
        final StringBuilder sb = new StringBuilder("Users{");
        sb.append("id=").append(id);
        sb.append(", username='").append(username).append('\'');
        sb.append(", password='").append(password).append('\'');
        sb.append(", email='").append(email).append('\'');
        sb.append(", phone='").append(phone).append('\'');
        sb.append(", birthday=").append(birthday);
        sb.append(", address='").append(address).append('\'');
        sb.append(", createDate=").append(createDate);
        sb.append(", updateDate=").append(updateDate);
        sb.append(", adminByAdminCreate=").append(adminByAdminCreate);
        sb.append(", adminByAdminUpdate=").append(adminByAdminUpdate);
        sb.append(", activeStatus=").append(activeStatus);
        sb.append(", status=").append(status);
        sb.append('}');
        return sb.toString();
    }
}


